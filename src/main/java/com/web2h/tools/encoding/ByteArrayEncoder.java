package com.web2h.tools.encoding;

import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.CharacterCodingException;
import java.nio.charset.Charset;

public class ByteArrayEncoder {
	
	/**
	 * Encodes the given string (coded with the provided char set) into a byte array.
	 * @param string String to transform
	 * @param charsetName Char set
	 * @return the generated byte array
	 */
	public static byte[] encode(CharSequence string, String charsetName) {
		try {
			CharBuffer cb = CharBuffer.wrap(string);
			Charset charset = Charset.forName(charsetName);
			ByteBuffer bytes = charset.newEncoder().encode(cb);
			byte[] bytesCopy = new byte[bytes.limit()];
			System.arraycopy(bytes.array(), 0, bytesCopy, 0, bytes.limit());

			return bytesCopy;
		} catch (CharacterCodingException e) {
			throw new IllegalArgumentException("Encoding failed", e);
		}
	}

	/**
	 * Decodes the bytes in the given charset into a String.
	 * @param bytes Bytes array to decode
	 * @param charsetName Char set
	 * @return The decoded string
	 */
	public static String decode(byte[] bytes, String charsetName) {
		try {
			ByteBuffer bb = ByteBuffer.wrap(bytes);
			Charset charset = Charset.forName(charsetName);
			CharBuffer cb = charset.newDecoder().decode(bb);
			return cb.toString();
		} catch (CharacterCodingException e) {
			throw new IllegalArgumentException("Decoding failed", e);
		}
	}
}